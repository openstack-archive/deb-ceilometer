####################
# ceilometer.conf sample #
####################

[DEFAULT]

######## defined in ceilometer.openstack.common.cfg:CommonConfigOpts ########

# debug=false
#### (BoolOpt) Print debugging output

# verbose=false
#### (BoolOpt) Print more verbose output

# log_config=<None>
#### (StrOpt) If this option is specified, the logging configuration file
####          specified is used and overrides any other logging options
####          specified. Please see the Python logging module
####          documentation for details on logging configuration files.

# log_format=%(asctime)s %(levelname)8s [%(name)s] %(message)s
#### (StrOpt) A logging.Formatter log message format string which may use
####          any of the available logging.LogRecord attributes. Default:
####          %default

# log_date_format=%Y-%m-%d %H:%M:%S
#### (StrOpt) Format string for %(asctime)s in log records. Default:
####          %default

# log_file=<None>
#### (StrOpt) (Optional) Name of log file to output to. If not set,
####          logging will go to stdout.

# log_dir=<None>
#### (StrOpt) (Optional) The directory to keep log files in (will be
####          prepended to --logfile)

# use_syslog=false
#### (BoolOpt) Use syslog for logging.

# syslog_log_facility=LOG_USER
#### (StrOpt) syslog facility to receive log lines


######## defined in ceilometer.meter ########

# metering_secret=change this or be hacked
#### (StrOpt) Secret value for signing metering messages

# counter_source=openstack
#### (StrOpt) Source for counters emited on this instance


######## defined in ceilometer.policy ########

# policy_file=policy.json
#### (StrOpt) JSON file representing policy

# policy_default_rule=default
#### (StrOpt) Rule checked when requested rule is not found


######## defined in ceilometer.publish ########

# metering_topic=metering
#### (StrOpt) the topic ceilometer uses for metering messages

# control_exchange=ceilometer
#### (StrOpt) AMQP exchange to connect to if using RabbitMQ or Qpid


######## defined in ceilometer.api ########

# metering_api_port=8777
#### (IntOpt) The port for the ceilometer API server

# auth_strategy=keystone
### (StrOpt) one of keystone or noauth

######## defined in ceilometer.central.manager ########

# disabled_central_pollsters=
#### (ListOpt) list of central pollsters to disable


######## defined in ceilometer.compute.notifications ########

# nova_control_exchange=nova
#### (StrOpt) Exchange name for Nova notifications


######## defined in ceilometer.image.notifications ########

# glance_control_exchange=glance_notifications
#### (StrOpt) Exchange name for Glance notifications


######## defined in ceilometer.network.notifications ########

# quantum_control_exchange=quantum
#### (StrOpt) Exchange name for Quantum notifications


######## defined in ceilometer.openstack.common.eventlet_backdoor ########

# backdoor_port=<None>
#### (IntOpt) port for eventlet backdoor to listen


######## defined in ceilometer.openstack.common.log ########

# logdir=<None>
#### (StrOpt) Log output to a per-service log file in named directory

# logfile=<None>
#### (StrOpt) Log output to a named file

# use_stderr=true
#### (BoolOpt) Log output to standard error

# logfile_mode=0644
#### (StrOpt) Default file mode used when creating log files

# logging_context_format_string=%(asctime)s %(levelname)s %(name)s [%(request_id)s %(user)s %(tenant)s] %(instance)s%(message)s
#### (StrOpt) format string to use for log messages with context

# logging_default_format_string=%(asctime)s %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s
#### (StrOpt) format string to use for log messages without context

# logging_debug_format_suffix=%(funcName)s %(pathname)s:%(lineno)d
#### (StrOpt) data to append to log format when level is DEBUG

# logging_exception_prefix=%(asctime)s %(process)d TRACE %(name)s %(instance)s
#### (StrOpt) prefix each line of exception output with this format

# default_log_levels=amqplib=WARN,sqlalchemy=WARN,boto=WARN,suds=INFO,keystone=INFO,eventlet.wsgi.server=WARN
#### (ListOpt) list of logger=LEVEL pairs

# publish_errors=false
#### (BoolOpt) publish error events

# fatal_deprecations=false
#### (BoolOpt) make deprecations fatal

# instance_format="[instance: %(uuid)s] "
#### (StrOpt) If an instance is passed with the log message, format it
####          like this

# instance_uuid_format="[instance: %(uuid)s] "
#### (StrOpt) If an instance UUID is passed with the log message, format
####          it like this


######## defined in ceilometer.openstack.common.notifier.api ########

#### (MultiStrOpt) Driver or drivers to handle sending notifications

# default_notification_level=INFO
#### (StrOpt) Default notification level for outgoing notifications

# default_publisher_id=$host
#### (StrOpt) Default publisher_id for outgoing notifications


######## defined in ceilometer.openstack.common.notifier.list_notifier ########

# list_notifier_drivers=ceilometer.openstack.common.notifier.no_op_notifier
#### (MultiStrOpt) List of drivers to send notifications


######## defined in ceilometer.openstack.common.notifier.rpc_notifier ########

# notification_topics=notifications
#### (ListOpt) AMQP topic used for openstack notifications


######## defined in ceilometer.openstack.common.rpc ########

# rpc_backend=ceilometer.openstack.common.rpc.impl_kombu
#### (StrOpt) The messaging module to use, defaults to kombu.

# rpc_thread_pool_size=64
#### (IntOpt) Size of RPC thread pool

# rpc_conn_pool_size=30
#### (IntOpt) Size of RPC connection pool

# rpc_response_timeout=60
#### (IntOpt) Seconds to wait for a response from call or multicall

# rpc_cast_timeout=30
#### (IntOpt) Seconds to wait before a cast expires (TTL). Only supported
####          by impl_zmq.

# allowed_rpc_exception_modules=ceilometer.openstack.common.exception,nova.exception,cinder.exception
#### (ListOpt) Modules of exceptions that are permitted to be recreatedupon
####           receiving exception data from an rpc call.

# fake_rabbit=false
#### (BoolOpt) If passed, use a fake RabbitMQ provider


######## defined in ceilometer.openstack.common.rpc.impl_kombu ########

# kombu_ssl_version=
#### (StrOpt) SSL version to use (valid only if SSL enabled)

# kombu_ssl_keyfile=
#### (StrOpt) SSL key file (valid only if SSL enabled)

# kombu_ssl_certfile=
#### (StrOpt) SSL cert file (valid only if SSL enabled)

# kombu_ssl_ca_certs=
#### (StrOpt) SSL certification authority file (valid only if SSL enabled)

# rabbit_host=localhost
#### (StrOpt) The RabbitMQ broker address where a single node is used

# rabbit_port=5672
#### (IntOpt) The RabbitMQ broker port where a single node is used

# rabbit_hosts=$rabbit_host:$rabbit_port
#### (ListOpt) RabbitMQ HA cluster host:port pairs

# rabbit_use_ssl=false
#### (BoolOpt) connect over SSL for RabbitMQ

# rabbit_userid=guest
#### (StrOpt) the RabbitMQ userid

# rabbit_password=guest
#### (StrOpt) the RabbitMQ password

# rabbit_virtual_host=/
#### (StrOpt) the RabbitMQ virtual host

# rabbit_retry_interval=1
#### (IntOpt) how frequently to retry connecting with RabbitMQ

# rabbit_retry_backoff=2
#### (IntOpt) how long to backoff for between retries when connecting to
####          RabbitMQ

# rabbit_max_retries=0
#### (IntOpt) maximum retries with trying to connect to RabbitMQ (the
####          default of 0 implies an infinite retry count)

# rabbit_durable_queues=false
#### (BoolOpt) use durable queues in RabbitMQ

# rabbit_ha_queues=false
#### (BoolOpt) use H/A queues in RabbitMQ (x-ha-policy: all).You need to
####           wipe RabbitMQ database when changing this option.


######## defined in ceilometer.openstack.common.rpc.matchmaker ########

# matchmaker_ringfile=/etc/nova/matchmaker_ring.json
#### (StrOpt) Matchmaker ring file (JSON)


######## defined in ceilometer.storage ########

# database_connection=mongodb://localhost:27017/ceilometer
#### (StrOpt) Database connection string


######## defined in ceilometer.storage.sqlalchemy.models ########

# mysql_engine=InnoDB
#### (StrOpt) MySQL engine


######## defined in ceilometer.storage.sqlalchemy.session ########

# sql_connection_debug=0
#### (IntOpt) Verbosity of SQL debugging information. 0=None,
####          100=Everything

# sql_connection_trace=false
#### (BoolOpt) Add python stack traces to SQL as comment strings

# sqlite_synchronous=true
#### (BoolOpt) If passed, use synchronous mode for sqlite

# sql_idle_timeout=3600
#### (IntOpt) timeout before idle sql connections are reaped

# sql_max_retries=10
#### (IntOpt) maximum db connection retries during startup. (setting -1
####          implies an infinite retry count)

# sql_retry_interval=10
#### (IntOpt) interval between retries of opening a sql connection


######## defined in ceilometer.volume.notifications ########

# cinder_control_exchange=cinder
#### (StrOpt) Exchange name for Cinder notifications


# Total option count: 72
